#------------------------------------------------------------------------
# Compiled template generated by the Template Toolkit version 2.15
#------------------------------------------------------------------------

Template::Document->new({
    METADATA => {
        'modtime' => '1163695602',
        'name' => 'theme_screen.html',
    },
    BLOCK => sub {
        my $context = shift || die "template sub called without context\n";
        my $stash   = $context->stash;
        my $output  = '';
        my $error;
        
        eval { BLOCK: {
    #line 2 "theme/basic/template/tt2/theme_screen.html"
    $output .=  $context->include('theme_html_doctype.html');
    $output .=  "\n";
    #line 3 "theme/basic/template/tt2/theme_screen.html"
    $output .=  $context->include('theme_html_begin.html');
    $output .=  "\n<table id=\"group\"><tr>\n<td id=\"group_1\">\n<div class=\"navigation\">\n";
    #line 7 "theme/basic/template/tt2/theme_screen.html"
    $output .=  $context->include('theme_title_pane.html');
    $output .=  "\n";
    #line 8 "theme/basic/template/tt2/theme_screen.html"
    $output .=  $context->include('theme_toolbar_pane.html');
    $output .=  "\n";
    #line 9 "theme/basic/template/tt2/theme_screen.html"
    $output .=  $context->include('theme_status_pane.html');
    $output .=  "\n</div>\n\n<hr />\n";
    #line 13 "theme/basic/template/tt2/theme_screen.html"
    $output .=  $context->include('theme_content_pane.html');
    $output .=  "\n<hr />\n\n<div class=\"navigation\">\n";
    #line 17 "theme/basic/template/tt2/theme_screen.html"
    $output .=  $context->include('theme_toolbar2_pane.html');
    $output .=  "\n</div>\n</td>\n\n<td id=\"group_2\">\n<div class=\"navigation\">\n";
    #line 23 "theme/basic/template/tt2/theme_screen.html"
    $output .=  $context->include('theme_widgets_pane.html');
    $output .=  "\n</div>\n\n</td>\n</tr></table>\n";
    #line 28 "theme/basic/template/tt2/theme_screen.html"
    $output .=  $context->include('theme_html_end.html');
    $output .=  "\n";
        } };
        if ($@) {
            $error = $context->catch($@, \$output);
            die $error unless $error->type eq 'return';
        }
    
        return $output;
    },
    DEFBLOCKS => {

    },
});
