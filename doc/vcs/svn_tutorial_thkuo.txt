# 情境 (thkuo)
# 模擬幾個人共同工作
# Windows client / Unix client
# (基本指令 help co ci info add import status revert export diff ...)

目前總有有一個專案經理A，與兩位工程師B與C，使用 svn 建立程式碼的版本控
制系統，有一天，一位新的工程師D加入了這個專案，PM要求D先將程式碼抓回去
研究，於是D君研究了一下手冊，就利用了 svn checkout 將程式碼下載回自己電
腦。
svn checkout file:///tmp/repos/test team_project

慢慢的，D君瞭解一些概況了，PM交派D君新增一個math模組，於是D君便先利用 
svn update 先將最新的程式碼更新。
svn update file:///tmp/repos/test team_project

而後D君新增一個了一個 math 目錄，放了 math.h 與 math.cpp，寫了交代的運
算函式後，利用 svn add，將整個 math 目錄加入預計提交的清單中。
svn add math

告一段落後，利用 svn commit 進行提交的動作。
svn commit



svn 指令參數介紹
( 1) help
當忘記 svn 參數時，可用 svn help 獲得參數清單，進一步得到提示。
( 2) checkout (co)
svn checkout file:///tmp/repos/test mine
第一次參與專案，可以直接使用 svn checkout 的方式，將整個 repository
下載回來，也可以採用 --revision (-r) 指定版號。
( 3) commit (ci)
程式碼告一段落後，即可利用 svn commit 寫入 repository。
( 4) info

( 5) add
當增加了一個新的檔案或是目錄PATH_A，便可以利用 svn add PATH_A，在下一
次 commit 的時候，便可以寫入 repository，而如果要取消新增
( 6) import

( 7) status

( 8) revert
#有時候，總會遇上程式碼改得相當雜亂的狀況，這時候便可以利用 svn revert
#將本地端的檔案回復到原始狀態，再重新修改。

( 9) export

(10) diff

(11) ...
